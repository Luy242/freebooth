/* 
 * Copyright (C) 2016 Johannes Wilke
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.freebooth.onlineMode;

import com.freebooth.photobooth.ShareOptionsPanel;
import com.freebooth.mailWizard.MailConfig;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import java.util.List;
import java.util.prefs.Preferences;

/**
 * this is the form of the mailwizard
 * @author johannes
 */
public class MailConfigFrame extends javax.swing.JFrame {

    List<String> images;
    List<String> mails;
    String path;
    List<String> logEntries;
    Preferences prefs;

    /**
     * Creates new form UploadFrame
     */
    public MailConfigFrame() {
        prefs = Preferences.userNodeForPackage(ShareOptionsPanel.class);
        images = new ArrayList<>();
        mails = new ArrayList<>();
        initComponents();
        
        editProvider.addItem("-");
        editProvider.addItem("GMail");
        editProvider.addItem("GMX");
        editProvider.addItem("Outlook.com");
        //editProvider.addItem("Mail.com");
        editProvider.addItem("web.de");

        editProvider.addItem("Yahoo!");

        editProvider.addItem("other");

        editProvider.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (editProvider.getSelectedItem().toString().equals("other")) {
                    editHost.setEnabled(true);
                    editEncrypt.setEnabled(true);
                    editPort.setEnabled(true);
                } else {
                    editHost.setEnabled(false);
                    editEncrypt.setEnabled(false);
                    editPort.setEnabled(false);
                }
            }
        });

        logEntries = new ArrayList<>();
        editEncrypt.setSelectedItem(prefs.get("mail_encryption", "SSL"));
        editHost.setText(prefs.get("mail_host", ""));
        editMailadress.setText(prefs.get("mail_mail", ""));
        editPassword.setText(prefs.get("mail_password", ""));
        if(prefs.getInt("mail_port", -1) != -1){
            editPort.setText(prefs.get("mail_port", ""));
        }
        editProvider.setSelectedItem(prefs.get("mail_provider", ""));
        editSubject.setText(prefs.get("mail_subject", java.util.ResourceBundle.getBundle("properties/Bundle").getString("MailConfigFrame.editSubject.text")));
        editText.setText(prefs.get("mail_message", java.util.ResourceBundle.getBundle("properties/Bundle").getString("MailConfigFrame.editText.text")));
        editUsername.setText(prefs.get("mail_username", ""));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        dateComponentFormatter1 = new org.jdatepicker.impl.DateComponentFormatter();
        jDatePickerUtil1 = new org.jdatepicker.util.JDatePickerUtil();
        jLabel1 = new javax.swing.JLabel();
        editProvider = new javax.swing.JComboBox();
        editUsername = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        buttonTestmail = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        editTestmail = new javax.swing.JTextField();
        editSubject = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        editText = new javax.swing.JTextArea();
        editPassword = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        editMailadress = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        editHost = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        editPort = new javax.swing.JTextField();
        editEncrypt = new javax.swing.JComboBox();
        pathLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        sendWatermarked = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("properties/Bundle"); // NOI18N
        setTitle(bundle.getString("UploadFrame.title")); // NOI18N
        setSize(new java.awt.Dimension(500, 800));
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        getContentPane().setLayout(layout);

        jLabel1.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        jLabel1.setText(bundle.getString("MailConfigFrame.jLabel1.text")); // NOI18N
        jLabel1.setToolTipText(bundle.getString("MailConfigFrame.jLabel1.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 363;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(editProvider, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipadx = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(editUsername, gridBagConstraints);

        jLabel4.setText(bundle.getString("MailConfigFrame.jLabel4.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel4, gridBagConstraints);

        jLabel5.setText(bundle.getString("MailConfigFrame.jLabel5.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setText(bundle.getString("MailConfigFrame.jLabel6.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setText(bundle.getString("MailConfigFrame.jLabel7.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel7, gridBagConstraints);

        buttonTestmail.setText(bundle.getString("MailConfigFrame.buttonTestmail.text")); // NOI18N
        buttonTestmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTestmailActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        getContentPane().add(buttonTestmail, gridBagConstraints);

        jLabel8.setText(bundle.getString("MailConfigFrame.jLabel8.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 20, 0);
        getContentPane().add(jLabel8, gridBagConstraints);

        editTestmail.setToolTipText(bundle.getString("MailConfigFrame.editTestmail.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        getContentPane().add(editTestmail, gridBagConstraints);

        editSubject.setText(bundle.getString("MailConfigFrame.editSubject.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(editSubject, gridBagConstraints);

        editText.setColumns(20);
        editText.setRows(5);
        editText.setText(bundle.getString("MailConfigFrame.editText.text")); // NOI18N
        jScrollPane2.setViewportView(editText);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 230;
        gridBagConstraints.ipady = 130;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(jScrollPane2, gridBagConstraints);

        editPassword.setToolTipText(bundle.getString("MailConfigFrame.editPassword.toolTipText")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(editPassword, gridBagConstraints);

        jLabel9.setText(bundle.getString("MailConfigFrame.jLabel9.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 230;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(editMailadress, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(200, 21));
        jScrollPane1.setRequestFocusEnabled(false);
        jScrollPane1.setVerifyInputWhenFocusTarget(false);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setTabSize(20);
        jScrollPane1.setViewportView(jTextArea1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 450;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 40);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jLabel10.setText(bundle.getString("MailConfigFrame.jLabel10.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        getContentPane().add(jLabel10, gridBagConstraints);

        jLabel11.setText(bundle.getString("MailConfigFrame.jLabel11.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel11, gridBagConstraints);

        editHost.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.ipadx = 150;
        getContentPane().add(editHost, gridBagConstraints);

        jLabel12.setText(bundle.getString("MailConfigFrame.jLabel12.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        getContentPane().add(jLabel12, gridBagConstraints);

        editPort.setEnabled(false);
        editPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPortActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(editPort, gridBagConstraints);

        editEncrypt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SSL", "TLS", "STARTTLS" }));
        editEncrypt.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 14;
        getContentPane().add(editEncrypt, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(pathLabel, gridBagConstraints);

        jLabel2.setText(bundle.getString("MailConfigFrame.jLabel2.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.gridwidth = 7;
        getContentPane().add(jLabel2, gridBagConstraints);

        cancelButton.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        cancelButton.setText(bundle.getString("MailConfigFrame.cancelButton.text")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 24;
        getContentPane().add(cancelButton, gridBagConstraints);

        saveButton.setFont(new java.awt.Font("Noto Sans", 0, 14)); // NOI18N
        saveButton.setText(bundle.getString("MailConfigFrame.saveButton.text")); // NOI18N
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 10;
        gridBagConstraints.gridy = 24;
        getContentPane().add(saveButton, gridBagConstraints);

        sendWatermarked.setText(bundle.getString("MailConfigFrame.sendWatermarked.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(sendWatermarked, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTestmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTestmailActionPerformed
        if (!editProvider.getSelectedItem().toString().equals("-")) {

                
                int port = 0;
                if (!editPort.getText().equals("")) {
                    port = Integer.parseInt(editPort.getText());
                }

                MailConfig config = new MailConfig(editProvider.getSelectedItem().toString(), editUsername.getText(), new String(editPassword.getPassword()), editMailadress.getText(), editText.getText(), editSubject.getText(), editEncrypt.getSelectedItem().toString(), editHost.getText(), port, sendWatermarked.isSelected());
                List<String> mail = new ArrayList<>();
                mail.add(editTestmail.getText());
                MailWorkerWithoutAttachment worker = new MailWorkerWithoutAttachment(mail, config, jTextArea1);
                worker.execute();

                jTextArea1.append(java.util.ResourceBundle.getBundle("properties/Bundle").getString("MailConfigFrame.Worker.testmail"));
                jTextArea1.append("\n");

            

        }
    }//GEN-LAST:event_buttonTestmailActionPerformed
    
    private void saveMailConfiguration(MailConfig config){
        prefs.put("mail_provider", config.getProvider());
        prefs.put("mail_username", config.getUsername());
        prefs.put("mail_password", config.getPassword());
        prefs.put("mail_mail", config.getMail());
        prefs.put("mail_message", config.getMessage());
        prefs.put("mail_subject", config.getSubject());
        prefs.put("mail_encryption", config.getEncryption());
        prefs.put("mail_host", config.getHost());
        prefs.put("mail_port", Integer.toString(config.getPort()));
        prefs.put("sendWatermarked",Boolean.toString(config.sendWatermarked()));
    }
    
    
    private void editPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editPortActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        int port = -1;
        if (!editPort.getText().equals("")){
            port = Integer.parseInt(editPort.getText());
        }
        MailConfig config = new MailConfig(editProvider.getSelectedItem().toString(), editUsername.getText(),new String(editPassword.getPassword()),editMailadress.getText(), editText.getText(), editSubject.getText(),editEncrypt.getSelectedItem().toString(),editHost.getText(),port, sendWatermarked.isSelected());
        saveMailConfiguration(config);
        this.dispose();
        
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    Throwable getCause(Throwable e) {
        Throwable cause = null;
        Throwable result = e;

        while (null != (cause = result.getCause()) && (result != cause)) {
            result = cause;
        }
        return result;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonTestmail;
    private javax.swing.JButton cancelButton;
    private org.jdatepicker.impl.DateComponentFormatter dateComponentFormatter1;
    private javax.swing.JComboBox editEncrypt;
    private javax.swing.JTextField editHost;
    private javax.swing.JTextField editMailadress;
    private javax.swing.JPasswordField editPassword;
    private javax.swing.JTextField editPort;
    private javax.swing.JComboBox editProvider;
    private javax.swing.JTextField editSubject;
    private javax.swing.JTextField editTestmail;
    private javax.swing.JTextArea editText;
    private javax.swing.JTextField editUsername;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel pathLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JCheckBox sendWatermarked;
    // End of variables declaration//GEN-END:variables
}
